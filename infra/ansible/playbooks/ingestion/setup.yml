---
# This instance supports running ELT scripts
- name: Configure Ingestion instance
  hosts: "{{ inventory_hosts | default('ingestion') }}"
  vars:
    uv_python_version: "3.12"
    ingestion_elt_git_url: https://github.com/ISISNeutronMuon/ddf-lakehouse-prototype.git
    ingestion_elt_git_dest: "{{ ansible_env['HOME'] }}/var/elt_sources"
    ingestion_elt_cron_scripts_dir: "{{ ansible_env['HOME'] }}/etc/cron"
    ingestion_elt_cron_log_dir: "{{ ansible_env['HOME'] }}/var/log/elt-pipelines/cron"
    ingestion_spark_conf_dir: "{{ ansible_env['HOME'] }}/etc/spark/conf"
    ingestion_create_cron_tasks: true
  tasks:
    # ---------- UV & Python ----------
    - name: Check if uv exists
      stat:
        path: /usr/local/bin/uv
      register: stat_uv

    - name: Fetch uv installer
      ansible.builtin.get_url:
        url: https://astral.sh/uv/0.6.6/install.sh
        dest: /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Execute uv installer
      become: true
      shell: env UV_UNMANAGED_INSTALL=/usr/local/bin sh /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Remove uv installer script
      file:
        path: /tmp/uv-install.sh
        state: absent
      when: not stat_uv.stat.exists

    - name: Find compatible Python version
      ansible.builtin.command: uv python find --quiet "{{ uv_python_version }}"
      register: uv_python_find

    - name: Ensure Python is installed
      ansible.builtin.command: uv python install "{{ uv_python_version }}"
      when: uv_python_find.rc == 0

    # ---------- AWS S3 ----------
    - name: Ensure S3 configuration directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.aws"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure S3 config file is absent
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.aws/config"
        state: absent

    - name: Ensure AWS configuration is present
      ansible.builtin.copy:
        dest: "{{ ansible_env['HOME'] }}/.aws/credentials"
        content: |+
          [default]
          endpoint = {{ s3_endpoint }}
          request_checksum_calculation = when_required
          region = local-01
          aws_access_key_id = {{ s3_access_key_id }}
          aws_secret_access_key = {{ s3_access_secret }}
        mode: "u=rw,o=r,g=r"

    # ---------- dlt secrets ----------
    - name: Ensure dlt secrets directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.dlt"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure dlt secrets exists
      ansible.builtin.template:
        src: dlt/secrets.toml.j2
        dest: "{{ ansible_env['HOME'] }}/.dlt/secrets.toml"

    # ---------- dbt profiles ----------
    - name: Ensure dbt profiles directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.dbt"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure dbt profiles exists
      ansible.builtin.template:
        src: dbt/profiles.yml.j2
        dest: "{{ ansible_env['HOME'] }}/.dbt/profiles.yml"

    # ---------- Cron tasks ----------
    - name: Configure cron jobs
      ansible.builtin.include_tasks: ./configure_elt_cron_jobs.yml
      when: ingestion_create_cron_tasks | bool

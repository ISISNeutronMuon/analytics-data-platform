---
- name: Ensure Traefik directories exist
  become: true
  ansible.builtin.file:
    path: "{{ traefik_dir.path }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"
    owner: "root"
    group: "root"
  loop:
    - {
        path: "{{ traefik_config_root }}/{{ traefik_etc_dynamic_path_relative }}",
        mode: "u=rwx,g=rx,o=rx",
      }
    - {
        path: "{{ traefik_config_root }}/logs/traefik",
        mode: "u=rwx,g=rx,o=rx",
      }
    - { path: "{{ traefik_certs_root }}", mode: "u=rwx,g=,o=" }
  loop_control:
    loop_var: traefik_dir

- name: Ensure TLS certifcates are present
  become: true
  no_log: true
  ansible.builtin.copy:
    dest: "{{ traefik_tls.filename }}"
    content: "{{ traefik_tls.content }}"
    owner: root
    group: root
    mode: "u=r,o=,g="
  loop:
    - {
        filename: "{{ traefik_certs_root }}/cert__data-accelerator_isis_cclrc_ac_uk.pem",
        content: "{{ vault_tls_cert__data_accelerator_isis_cclrc_ac_uk }}",
      }
    - {
        filename: "{{ traefik_certs_root }}/key__data-accelerator_isis_cclrc_ac_uk.pem",
        content: "{{ vault_tls_key__data_accelerator_isis_cclrc_ac_uk }}",
      }
  loop_control:
    loop_var: traefik_tls

- name: Regenerate Traefik static configuration
  become: true
  ansible.builtin.template:
    src: "templates/{{ traefik_etc_path_relative }}/traefik.yml.j2"
    dest: "{{ traefik_config_root }}/{{ traefik_etc_path_relative }}/traefik.yml"
    mode: "u=rw,g=r,o=r"

- name: Ensure Traefik container is running
  become: true
  community.docker.docker_container:
    name: traefik
    image: traefik:v3.1
    state: started
    cleanup: true
    detach: true
    restart: true
    recreate: true
    restart_policy: unless-stopped
    network_mode: host
    mounts:
      - type: bind
        source: "{{ traefik_certs_root }}/cert__data-accelerator_isis_cclrc_ac_uk.pem"
        target: /certs/cert__data-accelerator_isis_cclrc_ac_uk.pem
        read_only: true
      - type: bind
        source: "{{ traefik_certs_root }}/key__data-accelerator_isis_cclrc_ac_uk.pem"
        target: /certs/key__data-accelerator_isis_cclrc_ac_uk.pem
        read_only: true
    volumes:
      - "{{ traefik_config_root }}/{{ traefik_etc_path_relative }}:/etc/traefik"
      - "{{ traefik_certs_root }}:/certs"
      - "{{ traefik_config_root }}/logs/traefik:/var/log/traefik"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro

- name: Create temporary build directory for dynamic configurations
  ansible.builtin.tempfile:
    state: directory
  register: traefik_dynamic_confs_tempdir

- name: Regenerate new Traefik dynamic configuration (staging location)
  become: true
  ansible.builtin.template:
    src: "{{ traefik_template }}"
    dest: "{{ traefik_dynamic_confs_tempdir.path }}/{{ traefik_template | basename | replace('.j2', '') }}"
    mode: "u=rw,g=r,o=r"
  with_fileglob: "templates/{{ traefik_etc_dynamic_path_relative }}/*.j2"
  loop_control:
    loop_var: traefik_template

- name: Synchronize new dynamic configuration
  become: true
  ansible.posix.synchronize:
    use_ssh_args: true
    src: "{{ traefik_dynamic_confs_tempdir.path }}/"
    dest: "{{ traefik_config_root }}/{{ traefik_etc_dynamic_path_relative }}/"
    archive: false
    checksum: true
    recursive: true
    delete: true
  delegate_to: "{{ inventory_hostname }}"

- name: Remove temporary build directory for dynamic configurations
  ansible.builtin.file:
    path: "{{ traefik_dynamic_confs_tempdir.path }}"
    state: absent

---
# This instance supports running ELT scripts
- name: Configure Ingestion instance
  hosts: ingestion
  vars:
    uv_python_version: "3.13"
    ingestion_elt_git_url: https://github.com/ISISNeutronMuon/analytics-data-platform.git
    ingestion_elt_git_dest: "{{ ansible_env['HOME'] }}/var/elt_sources"
    ingestion_elt_cron_scripts_dir: "{{ ansible_env['HOME'] }}/etc/cron"
    ingestion_elt_cron_log_dir: "{{ ansible_env['HOME'] }}/var/log/elt-pipelines/cron"
    ingestion_spark_conf_dir: "{{ ansible_env['HOME'] }}/etc/spark/conf"
  roles:
    - role: geerlingguy.java
      become: true
      vars:
        java_packages:
          - openjdk-11-jre
  tasks:
    # ---------- UV & Python ----------
    - name: Check if uv exists
      stat:
        path: /usr/local/bin/uv
      register: stat_uv

    - name: Fetch uv installer
      ansible.builtin.get_url:
        url: https://astral.sh/uv/0.6.6/install.sh
        dest: /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Execute uv installer
      become: true
      shell: env UV_UNMANAGED_INSTALL=/usr/local/bin sh /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Remove uv installer script
      file:
        path: /tmp/uv-install.sh
        state: absent
      when: not stat_uv.stat.exists

    - name: Find compatible Python version
      ansible.builtin.command: uv python find --quiet "{{ uv_python_version }}"
      ignore_errors: true
      register: uv_python_find

    - name: Ensure Python is installed
      ansible.builtin.command: uv python install "{{ uv_python_version }}"
      when: uv_python_find.rc != 0

    # ---------- AWS S3 ----------
    - name: Ensure S3 configuration directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.aws"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure S3 config file is absent
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.aws/config"
        state: absent

    - name: Ensure AWS configuration is present
      ansible.builtin.copy:
        dest: "{{ ansible_env['HOME'] }}/.aws/credentials"
        content: |+
          [default]
          endpoint = {{ s3_endpoint }}
          request_checksum_calculation = when_required
          region = local-01
          aws_access_key_id = {{ s3_access_key_id }}
          aws_secret_access_key = {{ s3_access_secret }}
        mode: "u=rw,o=r,g=r"

    # ---------- dlt secrets ----------
    - name: Ensure dlt secrets directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.dlt"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure dlt secrets exists
      ansible.builtin.template:
        src: dlt/secrets.toml.j2
        dest: "{{ ansible_env['HOME'] }}/.dlt/secrets.toml"

    # ---------- dbt profiles ----------
    - name: Ensure dbt profiles directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.dbt"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure dbt profiles exists
      ansible.builtin.template:
        src: dbt/profiles.yml.j2
        dest: "{{ ansible_env['HOME'] }}/.dbt/profiles.yml"

    # ---------- Cron tasks ----------
    - name: Ensure cron scripts directory exists
      ansible.builtin.file:
        path: "{{ ingestion_elt_cron_scripts_dir }}"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Create/update ELT cron script template
      ansible.builtin.template:
        src: ./cron/elt_task.sh.j2
        dest: "{{ ingestion_elt_cron_scripts_dir }}/elt_task.sh"
        mode: "u=rwx,g=rx,o=rx"

    # ---------- statusdisplay ----------
    - name: Ensure statusdisplay cron logs directory exists
      become: true
      ansible.builtin.file:
        path: "{{ ingestion_elt_cron_log_dir }}/statusdisplay"
        state: directory
        recurse: true
        mode: "u=rwx,g=rx,o=rx"
        owner: 1000
        group: 1000

    - name: Ensure daily statusdisplay ingest job exists
      ansible.builtin.cron:
        name: "Statusdisplay ingest"
        state: "{{ ingestion_cron_state | default('present') }}"
        minute: "15"
        hour: "0"
        job: "{{ ingestion_elt_cron_scripts_dir }}/elt_task.sh pipelines/ingest/statusdisplay pipelines/modelling/isis --select '+models/facility' > {{ ingestion_elt_cron_log_dir }}/statusdisplay/elt-$(date +\\%Y\\%m\\%d_\\%H\\%M\\%S).log 2>&1"

    # ---------- Opralog ----------
    - name: Ensure Opralog cron logs directory exists
      become: true
      ansible.builtin.file:
        path: "{{ ingestion_elt_cron_log_dir }}/opralogweb"
        state: directory
        recurse: true
        mode: "u=rwx,g=rx,o=rx"
        owner: 1000
        group: 1000

    - name: Ensure daily Opralog ingest job exists
      ansible.builtin.cron:
        name: "Opralog ingest"
        state: "{{ ingestion_cron_state | default('present') }}"
        minute: "10"
        hour: "2"
        job: "{{ ingestion_elt_cron_scripts_dir }}/elt_task.sh pipelines/ingest/opralogweb pipelines/modelling/isis --select '+models/accelerator' > {{ ingestion_elt_cron_log_dir }}/opralogweb/elt-$(date +\\%Y\\%m\\%d_\\%H\\%M\\%S).log 2>&1"

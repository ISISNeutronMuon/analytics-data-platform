{%- set base_paths = {lakekeeper_base_path:  hostvars[groups['lakekeeper'][0]]['ansible_host']} %}
{% if 'lakekeeper_preview' in groups %}
{%- set _ = base_paths.update({lakekeeper_base_path + '-preview': hostvars[groups['lakekeeper_preview'][0]]['ansible_host']}) -%}
{% endif %}

http:
  routers:
    {% for base_path, server_name in base_paths.items() %}
    {%- set santized_name = base_path.replace('/', '_') -%}
    {{ santized_name }}:
      entryPoints: websecure
      rule: Host(`{{ top_level_domain }}`) && PathPrefix(`{{ base_path }}`)
      service: {{ santized_name }}
      middlewares:
        - {{ santized_name }}-strip-prefix
      tls: {}
    {% endfor %}

  middlewares:
    {% for base_path, server_name in base_paths.items() %}
    {%- set santized_name = base_path.replace('/', '_') -%}
    {{ santized_name }}-strip-prefix:
      stripPrefix:
        prefixes:
          - "{{ base_path }}"
    {% endfor %}

  services:
    {% for base_path, ip_addr in base_paths.items() %}
    {%- set santized_name = base_path.replace('/', '_') -%}
    {{ santized_name }}:
      loadBalancer:
        servers:
          - url: "http://{{ ip_addr }}:{{ lakekeeper_http_port }}"
    {% endfor %}

---
- name: Ensure Trino directories exist
  become: true
  ansible.builtin.file:
    path: "{{ trino_dir.path }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"
    owner: "{{ trino_dir.owner }}"
    group: "{{ trino_dir.owner }}"
  loop:
    - { path: "{{ trino_working_dir }}", owner: "root", group: "root" }
  loop_control:
    loop_var: trino_dir

- name: Ensure Trino etc properties files are present
  become: true
  ansible.posix.synchronize:
    use_ssh_args: true
    src: ./etc/
    dest: "{{ trino_working_dir }}/etc"
    archive: false
    recursive: true
    delete: true

- name: Ensure templated Trino config properties files are present
  become: true
  ansible.builtin.template:
    src: "{{ trino_template }}"
    dest: "{{ trino_working_dir }}/{{ trino_template | trim('.j2') }}"
    mode: "u=rw,g=r,o=r"
  loop:
    - etc/config.properties.j2
    - etc/jvm.config.j2
    - etc/catalog/isis.properties.j2
  loop_control:
    loop_var: trino_template

- name: Generate Trino catalog property files
  become: true
  ansible.builtin.copy:
    content: |
      connector.name=iceberg
      iceberg.catalog.type=rest
      iceberg.rest-catalog.uri={{ lakekeeper_catalog.uri }}
      iceberg.rest-catalog.warehouse={{ lakekeeper_warehouse.name }}
      iceberg.rest-catalog.vended-credentials-enabled=false
      iceberg.rest-catalog.security=OAUTH2
      iceberg.rest-catalog.oauth2.server-uri={{ keycloak_token_endpoint_url_isis }}
      iceberg.rest-catalog.oauth2.credential={{ vault_trino_catalog_client_id }}:{{ vault_trino_catalog_client_secret }}
      iceberg.rest-catalog.oauth2.scope=lakekeeper offline_access
      # Our S3 implementation does not have STS enabled so we need to provide
      # S3 credentials too
      fs.native-s3.enabled=true
      s3.endpoint={{ s3_endpoint }}
      s3.region={{ s3_region }}
      s3.path-style-access=true
      s3.aws-access-key={{ s3_access_key_id }}
      s3.aws-secret-key={{ s3_access_secret }}
    dest: "{{ trino_working_dir }}/etc/catalog/{{ lakekeeper_warehouse.name }}.properties"
    mode: "u=rw,g=r,o=r"
  loop: "{{ lakekeeper_catalog.warehouses }}"
  loop_control:
    loop_var: lakekeeper_warehouse

- name: Ensure credentials directory exists
  become: true
  ansible.builtin.file:
    path: "{{ trino_working_dir }}/creds"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: Ensure Trino passwords are available
  become: true
  ansible.builtin.lineinfile:
    path: "{{ trino_working_dir }}/creds/trino.pass"
    regexp: "^{{ user.username }}"
    line: "{{ user.username }}:{{ user.password | password_hash('bcrypt', rounds=10, ident='2y') }}"
    state: present
    create: true
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  loop: "{{ trino_users }}"
  loop_control:
    loop_var: user
  no_log: true

- name: Ensure Trino container is running
  become: true
  community.docker.docker_container:
    name: trino
    image: "{{ trino_image }}"
    state: started
    detach: true
    recreate: true
    restart: true
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - "{{ trino_working_dir }}/etc:/etc/trino:ro"
      - "{{ trino_working_dir }}/creds:/creds:ro"

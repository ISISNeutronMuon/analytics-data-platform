---
- name: Ensure configuration directory exists
  become: true
  ansible.builtin.file:
    path: "{{ spark_config_path }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: Ensure Docker image build files are synchronized
  become: true
  ansible.posix.synchronize:
    src: ./
    dest: "{{ spark_config_path }}/"
    archive: false
    recursive: true
    delete: true

- name: Build Spark container image
  become: true
  community.docker.docker_image_build:
    name: spark-iceberg
    path: "{{ spark_config_path }}"
    dockerfile: Dockerfile.spark
    rebuild: always

- name: Create container network
  become: true
  community.docker.docker_network:
    name: spark

- name: Run Spark controller
  become: true
  community.docker.docker_container:
    name: spark-controller
    image: spark-iceberg
    entrypoint: /bin/bash
    command: "start-master.sh"
    state: started
    detach: true
    restart: true
    restart_policy: unless-stopped
    recreate: true
    comparisons:
      networks: strict
      env: strict
    env:
      SPARK_MASTER_PORT: "{{ spark_controller_port | int }}"
      SPARK_NO_DAEMONIZE: "true"
    networks:
      - name: spark
    published_ports:
      - "{{ spark_controller_port }}:7077"
      - "{{ spark_controller_ui_port }}:8080"
    mounts:
      - source: "{{ spark_config_path }}/log4j2.properties"
        target: /opt/spark/conf/log4j2.properties
        type: bind

- name: Run Spark worker
  become: true
  community.docker.docker_container:
    name: spark-worker
    image: spark-iceberg
    entrypoint: "/bin/bash"
    command: "start-worker.sh spark://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ spark_controller_port }}"
    state: started
    detach: true
    restart: true
    restart_policy: unless-stopped
    recreate: true
    comparisons:
      networks: strict
      env: strict
    env:
      SPARK_NO_DAEMONIZE: "true"
    networks:
      - name: spark
    mounts:
      - source: "{{ spark_config_path }}/log4j2.properties"
        target: /opt/spark/conf/log4j2.properties
        type: bind
        target: /opt/spark/conf/spark-defaults.conf
        type: bind
      - source: "{{ spark_image_build_path }}/log4j2.properties"
        target: /opt/spark/conf/log4j2.properties
        type: bind

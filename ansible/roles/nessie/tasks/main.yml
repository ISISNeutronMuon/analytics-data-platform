---
- name: Ensure Nessie container is running
  become: true
  community.docker.docker_container:
    name: nessie
    image: "{{ nessie_image }}"
    state: started
    cleanup: true
    detach: true
    restart_policy: unless-stopped
    recreate: true
    published_ports:
      # API port
      - "{{ nessie_port }}:19120"
    env:
      # comment to keep formatter moving this up one line
      nessie.version.store.type=JDBC2
      nessie.version.store.persist.jdbc.datasource=postgresql
      quarkus.datasource.postgresql.jdbc.url="jdbc:postgresql://postgres:{{ nessie_store_port }}/{{ nessie_store_dbname }}"
      quarkus.datasource.postgresql.username="{{ nessie_store_user }}"
      quarkus.datasource.postgresql.password="{{ nessie_store_passwd }}"
      nessie.catalog.default-warehouse="{{ nessie_iceberg_catalog.name }}"
      nessie.catalog.warehouses."{{ nessie_iceberg_catalog.name }}".location="{{ nessie_iceberg_catalog.location }}"
      nessie.catalog.service.s3.default-options.endpoint="{{ s3_endpoint }}"
      nessie.catalog.service.s3.default-options.region="{{ s3_region }}"
      nessie.catalog.service.s3.default-options.path-style-access=true
      nessie.catalog.service.s3.default-options.auth-type=STATIC
      nessie.catalog.service.s3.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
      nessie.catalog.secrets.access-key.name="{{ s3_access_key_id }}"
      nessie.catalog.secrets.access-key.secret="{{ s3_access_secret }}"
    networks:
      - name: "{{ nessie_container_network }}"
    comparisons:
      networks: strict
      env: strict

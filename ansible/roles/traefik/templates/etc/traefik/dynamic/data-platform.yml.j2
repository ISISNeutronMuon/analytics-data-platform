# Dynamic traefik configuration
tcp:
  routers:
    # Non-TLS
    sparkcontroller:
      entryPoints: sparkcontroller
      rule: HostSNI(`*`)
      service: sparkcontroller
  services:
    sparkcontroller:
      loadBalancer:
        servers:
          - address: "{{ groups['spark'][0] }}:{{ spark_controller_port }}"

http:
  routers:
    # TLS
    traefik:
      entryPoints: web_tls
      rule: PathPrefix(`/traefik`) || HeaderRegexp(`Referer`, `/traefik`)
      service: api@internal
      middlewares:
        - traefik-strip-prefix
        - dashboardauth
      tls: {}
    jupyterhub:
      entryPoints: web_tls
      rule: PathPrefix(`{{ jupyterhub_base_path }}`)
      service: jupyterhub
      tls: {}
    superset:
      entryPoints: web_tls
      rule: PathPrefix(`{{ superset_base_path }}`)
      service: superset
{% if superset_base_path != '/' %}
      middlewares:
        - superset-strip-prefix
{% endif %}
      tls: {}
    trino:
      entryPoints: trino_tls
      rule: PathPrefix(`/`)
      service: trino
      tls: {}
{% if 'minio' in groups %}
    minio:
      entryPoints: minio_tls
      rule:  PathPrefix(`/`)
      service: minio
      tls: {}
{% endif %}
    sparkcontrollerui:
      entryPoints: sparkcontrollerui_tls
      rule:  PathPrefix(`/`)
      service: sparkcontrollerui
      tls: {}

  middlewares:
    dashboardauth:
      basicauth:
        users: admin:$2y$10$xRntwpemRqOvRaDz6kLt1ed3d5JcHZSjTdlO3tCiKmnN42hdrQsA6
{% if superset_base_path != '/' %}
    superset-strip-prefix:
      stripPrefix:
        prefixes: "{{ superset_base_path }}"
{% endif %}
    traefik-strip-prefix:
      stripPrefix:
        prefixes:
          - "/traefik"

  services:
    jupyterhub:
      loadBalancer:
        servers:
          - url: "http://{{ groups['jupyterhub'][0] }}:{{ jupyterhub_http_port }}"
    superset:
      loadBalancer:
        servers:
          - url: "http://{{ groups['superset'][0] }}:{{ superset_http_port }}"
    trino:
      loadBalancer:
        servers:
          - url: "{{ trino_coordinator_url }}"
{% if 'minio' in groups %}
    minio:
      loadBalancer:
        servers:
          - url: "http://{{ groups['minio'][0] }}:{{ minio_console_http_port }}"
{% endif %}
    sparkcontrollerui:
      loadBalancer:
        servers:
          - url: "http://{{ groups['spark'][0] }}:{{ spark_controller_ui_port }}"

tls:
  certificates:
    - certFile: /certs/dataplatform_cert.pem
      keyFile: /certs/dataplatform_key.pem

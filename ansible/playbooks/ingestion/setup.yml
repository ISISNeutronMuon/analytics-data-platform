---
# This instance supports running ELT scripts
- name: Configure Ingestion instance
  hosts: ingestion
  vars:
    uv_python_version: "3.12"
    # github_token must be provided on the command line
    elt_git_url: https://git:{{ github_token }}@github.com/ISISNeutronMuon/ddf-lakehouse-prototype.git
    elt_git_dest: "{{ ansible_env['HOME'] }}/var/elt_sources"
    elt_git_ref: "main"
    cron_log_dir: "/var/log/elt-pipelines/cron"
  roles:
    - role: geerlingguy.java
      become: true
      vars:
        java_packages:
          - openjdk-11-jre
  tasks:
    # ---------- UV & Python ----------
    - name: Check if uv exists
      stat:
        path: /usr/local/bin/uv
      register: stat_uv

    - name: Fetch uv installer
      ansible.builtin.get_url:
        url: https://astral.sh/uv/0.6.6/install.sh
        dest: /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Execute uv installer
      become: true
      shell: env UV_UNMANAGED_INSTALL=/usr/local/bin sh /tmp/uv-install.sh
      when: not stat_uv.stat.exists

    - name: Remove uv installer script
      file:
        path: /tmp/uv-install.sh
        state: absent
      when: not stat_uv.stat.exists

    - name: Find compatible Python version
      ansible.builtin.command: uv python find --quiet "{{ uv_python_version }}"
      register: uv_python_find

    - name: Ensure Python is installed
      ansible.builtin.command: uv python install "{{ uv_python_version }}"
      when: uv_python_find.rc == 0

    # ---------- AWS S3 ----------
    - name: Ensure S3 configuration directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.aws"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure AWS configuration is present
      ansible.builtin.copy:
        dest: "{{ ansible_env['HOME'] }}/.aws/config"
        content: |+
          [default]
          request_checksum_calculation = when_required
        mode: "u=rw,o=r,g=r"

    # ---------- ELT sources ----------
    - name: Pull ELT sources
      ansible.builtin.git:
        repo: "{{ elt_git_url }}"
        dest: "{{ elt_git_dest }}"
        version: "{{ elt_git_ref }}"
      environment:
        GIT_TERMINAL_PROMPT: 0 # reports "terminal prompts disabled" on missing password

    # ---------- Secrets ----------
    - name: Ensure dlt secrets directory exists
      ansible.builtin.file:
        path: "{{ ansible_env['HOME'] }}/.dlt"
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure dlt secrets exists
      ansible.builtin.template:
        src: ./templates/dlt/secrets.toml.j2
        dest: "{{ ansible_env['HOME'] }}/.dlt/secrets.toml"

    # ---------- Cron ----------
    - name: Ensure Opralog cron logs directory exists
      become: true
      ansible.builtin.file:
        path: "{{ cron_log_dir }}/opralogweb"
        state: directory
        recurse: true
        mode: "u=rwx,g=rx,o=rx"
        owner: 1000
        group: 1000

    - name: Ensure daily Opralog ingest job exists
      ansible.builtin.cron:
        name: "Opralog ingest"
        minute: "10"
        hour: "2"
        job: "{{ elt_git_dest }}/pipelines/ingest/opralogweb/cron-scripts/daily.sh > {{ cron_log_dir }}/opralogweb/extract-and-load-$(date +\\%Y\\%m\\%d_\\%H\\%M\\%S).log 2>&1"

---
- name: Run MSSQL server with a snapshot of the Opralog DB
  hosts: datasources
  tasks:
    - name: Ensure Opralog DB container is running
      become: true
      community.docker.docker_container:
        name: "{{ datasources_opralogdb_container_name }}"
        image: mcr.microsoft.com/mssql/server:2019-latest
        state: started
        cleanup: true
        detach: true
        restart: true
        restart_policy: unless-stopped
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: "{{ datasources_opralogdb_passwd }}"
        network_mode: host
        volumes:
          - datasources_opralogdb_data:/var/opt/mssql
          - "{{ cephfs_mount_mount_path }}/staging:/staging:ro"

    - name: Query existing databases
      community.docker.docker_container_exec:
        container: "{{ datasources_opralogdb_container_name }}"
        command: >-
          /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U {{ datasources_opralogdb_user }} -P {{ datasources_opralogdb_passwd }} -Q "{{ query }}"
      register: databases
      vars:
        query: "SELECT name FROM master.sys.databases WHERE name = '{{ datasources_opralogdb_dbname }}'"

    - name: "Import database backup"
      community.docker.docker_container_exec:
        container: "{{ datasources_opralogdb_container_name }}"
        command: >-
          /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U {{datasources_opralogdb_user }}
          -P {{ datasources_opralogdb_passwd }} -Q "{{ backup_restore }}"
      vars:
        backup_restore: >-
          RESTORE DATABASE LOGBOOK FROM DISK = '{{ datasources_opralogdb_backup_dir }}/{{ datasources_opralogdb_backup_filename }}'
          WITH MOVE '{{ datasources_opralogdb_dbname }}_Data' TO '/var/opt/mssql/{{ datasources_opralogdb_dbname }}_Data.mdf',
          MOVE '{{ datasources_opralogdb_dbname }}_Log' TO '/var/opt/mssql/{{ datasources_opralogdb_dbname }}_Log.ldf'
        opralog_db: "{{ databases.stdout_lines | map('trim') | select('==', datasources_opralogdb_dbname) }}"
      when: "(opralog_db | length()) == 0"
